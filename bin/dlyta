#!/usr/bin/env python
import re, unicodedata
import sys, os
from concurrent.futures import ThreadPoolExecutor
from pytubefix import YouTube


def normalize(name):
    name = unicodedata.normalize("NFKD", name).strip()
    name = re.sub(r'[<>:"/\\|?*\x00-\x1F]', "", name)
    name = re.sub(r"\s+", " ", name)
    return name[:255]


def download(url):
    yt = YouTube(url)
    stream = yt.streams.filter(only_audio=True).order_by("abr").desc().first()
    filename = normalize(stream.default_filename)
    if not os.path.exists(filename):
        stream.download(filename=filename)
    print(filename, flush=True)


def main():
    urls = [l.strip() for l in sys.stdin if l.strip()]
    with ThreadPoolExecutor() as e:
        e.map(download, urls)


if __name__ == "__main__":
    main()
