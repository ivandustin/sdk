#!/usr/bin/env python
from argparse import ArgumentParser
from contextlib import suppress
from sys import stdin, stdout
from pathlib import Path
from time import sleep
from os import environ
from playwright.sync_api import sync_playwright


def main():
    parser = ArgumentParser()
    parser.add_argument("--media", type=Path, help="Add photo or video")
    args = parser.parse_args()
    storage_state = Path(environ["PW"])
    assert storage_state.is_file(), "Expected a storage state file"
    profile = environ.get("FBPROF", "")
    is_public = environ.get("FBPUB", "0") == "1"
    is_private = not is_public
    message = stdin.read()
    assert message, "Expected a message to post"
    with sync_playwright() as playwright:
        browser = playwright.chromium.launch(headless=True)
        context = browser.new_context(storage_state=storage_state)
        context.set_default_timeout(60000)
        page = context.new_page()
        page.goto("https://www.facebook.com/")
        if profile:
            page.get_by_role("button", name="Your profile", exact=True).click()
            page.get_by_label("See all profiles").click()
            page.get_by_role("button", name=f"{profile}, ").click()
        sleep(10)
        page.get_by_role("button", name="What's on your mind, ").click()
        if is_private:
            page.get_by_label("Edit privacy. Sharing with").click()
            page.get_by_role("radio", name="Only me").click()
            page.get_by_label("Done").click()
        page.get_by_role("paragraph").click()
        page.get_by_role("textbox").fill(message)
        if args.media:
            with page.expect_file_chooser() as fc_info:
                page.get_by_role("button", name="Photo/video").click()
            file_chooser = fc_info.value
            file_chooser.set_files(str(args.media))
        with suppress(Exception):
            page.get_by_label("Next", exact=True).click()
        page.get_by_label("Post", exact=True).click()
        sleep(10)
        context.close()
        browser.close()
    stdout.write(message)


if __name__ == "__main__":
    main()
